services:
  router:
    image: ghcr.io/apollographql/router:v1.19.0
    environment:
      - APOLLO_SCHEMA_CONFIG_EMBEDDED=true
      - APOLLO_ROUTER_LOG=error
    volumes:
      - ./knighthacks_router/schema.graphql:/etc/config/supergraph.graphql
      - ./knighthacks_router/script.rhai:/etc/config/script.rhai
      - ./knighthacks_router/configuration.yaml:/etc/config/configuration.yaml
    command: [ "-c", "/etc/config/configuration.yaml", "--supergraph", "/etc/config/supergraph.graphql" ]
    ports:
      - "4000:4000"
  events:
    depends_on:
      - router
      - postgres
    build:
      context: ./knighthacks_events
      dockerfile: ./Dockerfile
    env_file: [ .env ]
    environment:
      GIN_MODE: "debug"
      TRUSTED_PROXIES: ""
      DATABASE_URI: "postgresql://postgres:test@postgres:5432/postgres"
  users:
    depends_on:
      - router
      - postgres
    build:
      context: ./knighthacks_users
      dockerfile: ./Dockerfile
    env_file: [ .env ]
    environment:
      GIN_MODE: "debug"
      TRUSTED_PROXIES: ""
      DATABASE_URI: "postgresql://postgres:test@postgres:5432/postgres"
    volumes:
      - ./testing/email-templates:/etc/config
  sponsors:
    depends_on:
      - router
      - postgres
    build:
      context: ./knighthacks_sponsors
      dockerfile: ./Dockerfile
    env_file: [ .env ]
    environment:
      GIN_MODE: "debug"
      TRUSTED_PROXIES: ""
      DATABASE_URI: "postgresql://postgres:test@postgres:5432/postgres"
  hackathon:
    depends_on:
      - router
      - postgres
    build:
      context: ./knighthacks_hackathon
      dockerfile: ./Dockerfile
    env_file: [ .env ]
    environment:
      GIN_MODE: "debug"
      TRUSTED_PROXIES: ""
      DATABASE_URI: "postgresql://postgres:test@postgres:5432/postgres"
    volumes:
      - ./testing/email-templates:/etc/config
  postgres:
    image: "postgres:14-alpine"
    restart: always
    command: [ "postgres", "-c", "log_statement=all" ]
    environment:
      POSTGRES_PASSWORD: test
    ports:
      - "5432:5432"
    volumes:
      - ./testing/postgres/init.sql:/docker-entrypoint-initdb.d/db.sql
      - ./postgres-data:/var/lib/postgresql/data
      - ./postgres-logs:/logs:z
  hackathon-site-2023:
    build:
      context: ./hackathon-site-2023
      dockerfile: ./Dockerfile
    depends_on:
      - router
    environment:
      NEXT_PUBLIC_API_ENDPOINT: http://router:4000
volumes:
  postgres-data:
  postgres-logs: